#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Perun::Agent;
use Perun::Common qw(printMessage); 
use Switch;

sub help {
return qq{
Sets the member resource attribute. Resource id and member id and attribute value and attribute id or name are required.
--------------------------------------
Available options:
 --resourceId      | -r facility id 
 --memberId        | -m member id
 --attributeId     | -a attribute id
 --attributeName   | -A attribute name including namespace
 --attributeValue  | -w attribute value
 --batch           | -b batch
 --help            | -h prints this help

};
}

my ($resourceId, $memberId, $attributeId, $attributeName, @attributeValue);
our $batch;
GetOptions ("help|h" => sub { print help(); exit 0;} ,"batch|b" => \$batch,
 "resourceId|r=i" => \$resourceId, "attributeId|a=i" => \$attributeId, 
 "attributeName|A=s" => \$attributeName, 'attributeValue|w=s@{1,}' => \@attributeValue,
 "memberId|m=i" => \$memberId) || die help(); 

# Check options
unless (defined($resourceId)) { die "ERROR: resourceId is required \n";}
unless (defined($memberId)) { die "ERROR: memberId is required \n";}
unless (defined($attributeId) or defined($attributeName)) { die "ERROR: attributeId or attributeName is required \n";}
unless (@attributeValue) { die "ERROR: attributeValue is required \n";}

my $agent = Perun::Agent->new();
my $attributesAgent = $agent->getAttributesAgent;
my $attributeDefinition;

if (!defined($attributeId)) {
  $attributeDefinition =  $attributesAgent->getAttributeDefinition(attributeName => $attributeName);
} else {
  $attributeDefinition =  $attributesAgent->getAttributeDefinitionById(id => $attributeId);
}

# Get the attribute definition and create the attribute
my $attribute = Perun::beans::Attribute->fromAttributeDefinition($attributeDefinition);

$attribute->setValueFromArray(@attributeValue);

$attributesAgent->setAttribute(resource => $resourceId, member => $memberId, attribute => $attribute);

printMessage("Attribute Id:".$attribute->getId." set for the resource Id:$resourceId and member Id:$memberId", $batch);
